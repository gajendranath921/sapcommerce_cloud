# -----------------------------------------------------------------------
# Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.
# -----------------------------------------------------------------------


# Specifies the location of the spring context file putted automatically to the global platform application context.
samlsinglesignon.application-context=samlsinglesignon-spring.xml

# the user type for newly created user in hybris
sso.mapping.asagentgroup.usertype=Employee
# the user group mapping that is valid in hybris
sso.mapping.asagentgroup.groups=asagentsalesmanagergroup

# the default context to use to build the redirect URL for security reasons e.g. http://localhost:9001/
#sso.redirect.url=https://localhost:9002/
# cookie age in seconds
#sso.cookie.max.age=60
# cookie path
#sso.cookie.path=/
# cookie domain
#sso.cookie.domain=
# generated token name, if empty then samlPassThroughToken will be used
#sso.cookie.name=LoginToken
# default password encoding default value if not set is md5
#sso.password.encoding=
# the usergroup attribute name in saml assertion
#sso.usergroup.attribute.key=
# the first name attribute name in saml assertion
#sso.firstname.attribute.key=
# the last name attribute name in saml assertion
#sso.lastname.attribute.key=
# the email address attribute name in saml assertion
#sso.userid.attribute.key=
# the language attribute name in saml assertion. If set, it is taken to determine an application language
#sso.language.attribute.key=
# location of the samelKeystore file
#sso.keystore.location=classpath:security/samlKeystore.jks
# password of the keystore, changeit by default
#sso.keystore.password=changeit
# default priate key alias shipped within samlkeysotre
#sso.keystore.privatekey.alias=hybris
# private key password
#sso.keystore.privatekey.password=changeit
# alias for the default certificate 
#sso.keystore.default.certificate.alias=hybris
# the location of the metadata file which holds the IDP info
#sso.metadata.location=classpath:security/metadata.xml
# the entity id to identity our service provider
#sso.entity.id=urn:ssoextension:hybris:de
#param name to pass return to url after successful login
#sso.return.url.param.name=return_to
#allowlist of allowed redirection top domains, separated with commas, if redirecting after login to different host
#sso.return.url.domain.whitelist=mysite.com,othersite.com

samlsinglesignon.tomcat.tld.scan=javax.servlet.jsp.jstl-*.jar
samlsinglesignon.tomcat.tld.default.scan.enabled=false
samlsinglesignon.tomcat.pluggability.scan=javax.servlet.jsp.jstl-*.jar
samlsinglesignon.tomcat.pluggability.default.scan.enabled=false

#url to redirect when comes to saml logout
samlsinglesignon.logout.redirect.url=/logout.jsp

cookies.null./samlsinglesignon.JSESSIONID.SameSite=None
cookies.SameSite.enabled=true

# Allows to set registrationId of RelyingPartyRegistration. RegistrationId is used in endpoints exposed by saml
# when using new saml configuration.
sso.relyingPartyRegistration.registrationId=registrationId

# Specifies signing algorithms which can be used to sign <saml2:AuthnRequest>
# IMPORTANT: To set a property value that contains a hash, you need to precede the hash with a double backslash and a
# comma needs to be used as a delimiter in case of providing more than one algorithm, for instance:
# sso.signing.algorithms=http://www.w3.org/2001/04/xmldsig-more\\#rsa-sha256,http://www.w3.org/2000/09/xmldsig\\#dsa-sha1
# The value is empty which means that by default there are configured the following signing algorithms (the algorithm which
# will be used to sign <saml2:AuthnRequest> depends on an encryption algorithm of a configured private key in the keystore) :
# http://www.w3.org/2001/04/xmldsig-more#rsa-sha256,
# http://www.w3.org/2009/xmldsig11#dsa-sha256,
# http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256,
# http://www.w3.org/2001/04/xmldsig-more#hmac-sha256
# If there are a few signing algorithms with the same an encryption algorithm (for instance RSA) assigned to the property,
# then the first defined will be used in a signing process. 
# IMPORTANT:The signing algorithm must be compliant with the encryption algorithm of the configured private key
# and supported by used an Identity Provider.
#sso.signing.algorithms=

# This setting is for the legacy support for endpoints exposed by saml and configured in IDP
# The default value is true, set it to false if you want to use endpoints shipped with new saml configuration
sso.legacy.endpoints.enabled=true

# The property defines pattern for request matcher used in Saml2WebSsoAuthenticationFilter
# The default values is empty which means if the flag sso.legacy.endpoints.enabled is set to true
# then property takes the value:
#  /saml/SSO/**
# otherwise:
#  /login/saml2/sso/{registrationId}
# sso.filter.processes.uri=

# The property defines pattern for request matcher used in Saml2MetadataFilter
# The default values is empty which means if the flag sso.legacy.endpoints.enabled is set to true
# then property takes the value:
# /saml/metadata/**
# otherwise:
# /saml2/service-provider-metadata/{registrationId}
# sso.metadata.uri=

# The property defines pattern for request matcher used in Saml2LogoutRequestFilter
# The default values is empty which means if the flag sso.legacy.endpoints.enabled is set to true
# then property takes the value:
# /saml/SingleLogout
# otherwise:
# /logout/saml2/slo
# sso.single.logout.uri=

# The property defines binding for single logout service. The default value is: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST
# If Redirect binding is required the property should be set to value: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect
#sso.single.logout.binding=

# The property enables or disables verification of signature's validity and trust for digitally signed metadata.
# The default value is true, set it to false if you want disable signature verification.
sso.metadata.verification.enabled=true