import { TargetGroupState, TriggerAction, Trigger } from 'personalizationcommons';
export declare class TriggerService {
    readonly actions: TriggerAction[];
    private readonly supportedTypes;
    isContainer(element: Trigger): boolean;
    isEmptyContainer(element: Trigger): boolean;
    isNotEmptyContainer(element: Trigger): boolean;
    isDropzone(element: Trigger): boolean;
    isItem(element: Trigger): boolean;
    isValidExpression(element: Trigger): boolean;
    buildTriggers(form: TargetGroupState, existingTriggers: Trigger[]): Trigger[];
    buildData(triggers: any): Trigger[];
    isDefault(triggers: Trigger[]): boolean;
    getExpressionAsString(expressionContainer: Trigger): string;
    private isElementOfType;
    private isNegation;
    private isDefaultData;
    private isExpressionData;
    private isSupportedTrigger;
    private isDefaultTrigger;
    private isSegmentTrigger;
    private isExpressionTrigger;
    private isGroupExpressionData;
    private isSegmentExpressionData;
    private isNegationExpressionData;
    private buildSegmentsForTrigger;
    private buildExpressionForTrigger;
    private buildDefaultTrigger;
    private buildExpressionTrigger;
    private buildSegmentTrigger;
    private mergeTriggers;
    private buildContainer;
    private buildItem;
    private getBaseData;
    private buildExpressionFromTrigger;
    private buildSegmentTriggerData;
    private buildExpressionTriggerData;
}
